let ctx:any; // only used to display image
let ctx2:any; // only used to grab image data. The second set of everything is to avoid losing temp data when switching
                // between diff palettes because some palettes have fewer colors
let img: any;
let img2: any;

let canvas: any;

const arcticPalette:number[][] = [[31, 117, 193], [31, 117, 197], [32, 116, 200], [33, 116, 204], [34, 115, 208], [35, 115, 211], [36, 114, 215], [36, 113, 219], [37, 113, 223], [38, 112, 226], [39, 112, 230], [40, 111, 234], [43, 109, 239], [47, 106, 237], [52, 102, 234], [58, 98, 230], [64, 93, 227], [69, 89, 224], [75, 85, 220], [81, 83, 217], [87, 80, 213], [94, 77, 210], [100, 74, 206], [106, 72, 202], [113, 68, 198], [119, 66, 195], [126, 63, 191], [132, 60, 187], [138, 58, 184], [145, 55, 180], [151, 52, 176], [157, 49, 173], [164, 46, 169], [170, 44, 165], [176, 41, 160], [177, 43, 158], [176, 44, 157], [176, 47, 156], [175, 49, 155], [174, 51, 154], [171, 54, 153], [168, 58, 152], [166, 62, 150], [162, 67, 149], [159, 71, 147], [156, 75, 146], [152, 79, 144], [149, 84, 143], [146, 87, 142], [142, 90, 141], [138, 94, 140], [134, 97, 139], [130, 100, 137], [126, 104, 136], [122, 107, 135], [119, 111, 134], [115, 114, 133], [111, 118, 131], [107, 121, 130], [104, 125, 129], [102, 128, 128], [103, 131, 125], [104, 134, 123], [105, 137, 120], [107, 140, 117], [108, 143, 115], [109, 146, 112], [110, 148, 109], [111, 151, 107], [112, 154, 104], [113, 157, 102], [115, 160, 99], [116, 163, 96], [117, 166, 94], [118, 169, 91], [119, 172, 88], [120, 175, 86], [121, 178, 83], [123, 181, 80], [124, 183, 78], [125, 186, 75], [126, 189, 72], [127, 192, 70], [128, 195, 67], [130, 198, 65], [131, 201, 62], [132, 203, 61], [134, 201, 60], [138, 198, 57], [143, 195, 55], [145, 194, 54], [149, 191, 51], [153, 188, 49], [156, 186, 47], [160, 183, 45], [164, 180, 43], [166, 178, 41], [170, 175, 39], [174, 172, 37], [177, 170, 35], [181, 167, 33], [185, 165, 31], [187, 163, 29], [191, 160, 27], [194, 158, 34], [196, 156, 37], [199, 155, 44], [202, 152, 51], [203, 151, 54], [206, 149, 61], [209, 147, 67], [210, 146, 71], [214, 144, 77], [216, 142, 84], [217, 141, 88], [221, 138, 94], [223, 137, 101], [225, 136, 104], [227, 134, 108], [228, 133, 109]];
const coldestPalette:number[][] = [[41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [41, 110, 240], [34, 128, 128], [35, 128, 128], [36, 128, 128], [37, 128, 128], [38, 128, 128], [39, 128, 128], [40, 128, 128], [41, 128, 128], [42, 128, 128], [43, 128, 128], [44, 128, 128], [44, 128, 128], [45, 128, 128], [46, 128, 128], [47, 128, 128], [48, 128, 128], [49, 128, 128], [50, 128, 128], [51, 128, 128], [52, 128, 128], [53, 128, 128], [54, 128, 128], [55, 128, 128], [56, 128, 128], [57, 128, 128], [58, 128, 128], [59, 128, 128], [60, 128, 128], [61, 128, 128], [62, 128, 128], [63, 128, 128], [64, 128, 128], [65, 128, 128], [66, 128, 128], [67, 128, 128], [68, 128, 128], [69, 128, 128], [70, 128, 128], [71, 128, 128], [72, 128, 128], [73, 128, 128], [74, 128, 128], [75, 128, 128], [76, 128, 128], [77, 128, 128], [78, 128, 128], [79, 128, 128], [80, 128, 128], [81, 128, 128], [82, 128, 128], [83, 128, 128], [84, 128, 128], [85, 128, 128], [86, 128, 128], [87, 128, 128], [88, 128, 128], [89, 128, 128], [90, 128, 128], [91, 128, 128], [92, 128, 128], [93, 128, 128], [94, 128, 128], [95, 128, 128], [96, 128, 128], [97, 128, 128], [98, 128, 128], [99, 128, 128], [99, 128, 128], [100, 128, 128], [101, 128, 128], [102, 128, 128], [103, 128, 128], [104, 128, 128], [105, 128, 128], [106, 128, 128], [107, 128, 128], [108, 128, 128], [109, 128, 128], [110, 128, 128], [111, 128, 128], [112, 128, 128], [113, 128, 128], [114, 128, 128], [115, 128, 128], [116, 128, 128], [117, 128, 128], [118, 128, 128], [119, 128, 128], [120, 128, 128], [121, 128, 128], [122, 128, 128], [123, 128, 128], [124, 128, 128], [125, 128, 128], [126, 128, 128], [127, 128, 128], [128, 128, 128], [129, 128, 128], [130, 128, 128], [131, 128, 128], [132, 128, 128], [133, 128, 128], [134, 128, 128], [135, 128, 128], [136, 128, 128], [137, 128, 128], [138, 128, 128], [139, 128, 128], [140, 128, 128], [141, 128, 128], [142, 128, 128], [143, 128, 128], [144, 128, 128], [145, 128, 128], [146, 128, 128], [147, 128, 128], [148, 128, 128], [149, 128, 128], [150, 128, 128], [151, 128, 128], [152, 128, 128], [153, 128, 128], [154, 128, 128], [154, 128, 128], [155, 128, 128], [156, 128, 128], [157, 128, 128], [158, 128, 128], [159, 128, 128], [160, 128, 128], [161, 128, 128], [162, 128, 128], [163, 128, 128], [164, 128, 128], [165, 128, 128], [166, 128, 128], [167, 128, 128], [168, 128, 128], [169, 128, 128], [170, 128, 128], [171, 128, 128], [172, 128, 128], [173, 128, 128], [174, 128, 128], [175, 128, 128], [176, 128, 128], [177, 128, 128], [178, 128, 128], [179, 128, 128], [180, 128, 128], [181, 128, 128], [182, 128, 128], [183, 128, 128], [184, 128, 128], [185, 128, 128], [186, 128, 128], [187, 128, 128], [188, 128, 128], [189, 128, 128], [190, 128, 128], [191, 128, 128], [192, 128, 128], [193, 128, 128], [194, 128, 128], [195, 128, 128], [196, 128, 128], [197, 128, 128], [198, 128, 128], [199, 128, 128], [200, 128, 128], [201, 128, 128], [202, 128, 128], [203, 128, 128], [204, 128, 128], [205, 128, 128], [206, 128, 128], [207, 128, 128], [208, 128, 128], [209, 128, 128], [209, 128, 128], [210, 128, 128], [211, 128, 128], [212, 128, 128], [213, 128, 128], [214, 128, 128], [215, 128, 128], [216, 128, 128], [217, 128, 128], [218, 128, 128], [219, 128, 128], [220, 128, 128], [221, 128, 128], [222, 128, 128], [223, 128, 128], [224, 128, 128], [225, 128, 128], [226, 128, 128], [227, 128, 128], [228, 128, 128], [229, 128, 128], [230, 128, 128], [231, 128, 128], [232, 128, 128], [233, 128, 128], [234, 128, 128], [235, 128, 128]];
const contrastPalette:number[][] = [[16, 128, 128], [19, 131, 130], [22, 134, 133], [25, 137, 135], [28, 141, 138], [31, 144, 140], [34, 147, 143], [37, 150, 145], [40, 153, 148], [43, 156, 150], [46, 159, 153], [49, 163, 155], [52, 166, 158], [55, 169, 160], [59, 172, 163], [62, 175, 165], [65, 178, 168], [68, 182, 170], [71, 185, 173], [74, 188, 175], [77, 191, 178], [80, 194, 180], [83, 197, 183], [86, 200, 185], [89, 204, 188], [92, 207, 190], [95, 210, 193], [98, 213, 195], [96, 209, 195], [93, 206, 195], [91, 202, 195], [88, 199, 195], [86, 195, 195], [83, 192, 195], [81, 188, 195], [78, 185, 195], [76, 181, 195], [73, 177, 195], [71, 174, 195], [68, 170, 195], [66, 167, 195], [63, 163, 195], [61, 160, 195], [58, 156, 195], [56, 153, 195], [53, 149, 195], [51, 145, 195], [48, 142, 195], [46, 138, 195], [43, 135, 195], [41, 131, 195], [38, 128, 195], [36, 124, 195], [33, 121, 195], [31, 117, 195], [36, 114, 194], [40, 110, 193], [45, 107, 191], [49, 104, 190], [54, 100, 189], [58, 97, 188], [63, 94, 186], [67, 90, 185], [72, 87, 184], [77, 84, 183], [81, 80, 182], [86, 77, 180], [90, 74, 179], [95, 70, 178], [99, 67, 177], [104, 64, 175], [108, 60, 174], [113, 57, 173], [118, 54, 172], [122, 50, 171], [127, 47, 169], [131, 44, 168], [136, 40, 167], [140, 37, 166], [145, 34, 164], [149, 30, 163], [154, 27, 162], [150, 30, 160], [147, 32, 158], [143, 35, 156], [139, 38, 154], [136, 40, 151], [132, 43, 149], [129, 46, 147], [125, 48, 145], [121, 51, 143], [118, 54, 141], [114, 56, 139], [110, 59, 137], [107, 62, 135], [103, 64, 132], [100, 67, 130], [96, 70, 128], [92, 72, 126], [89, 75, 124], [85, 78, 122], [81, 80, 120], [78, 83, 118], [74, 86, 116], [71, 88, 113], [67, 91, 111], [63, 94, 109], [60, 96, 107], [56, 99, 105], [61, 101, 102], [65, 102, 99], [70, 104, 97], [75, 105, 94], [79, 107, 91], [84, 108, 88], [89, 110, 85], [93, 111, 83], [98, 113, 80], [103, 115, 77], [107, 116, 74], [112, 118, 71], [117, 119, 69], [121, 121, 66], [126, 122, 63], [130, 124, 60], [135, 125, 58], [140, 127, 55], [144, 128, 52], [149, 130, 49], [154, 132, 46], [158, 133, 44], [163, 135, 41], [168, 136, 38], [172, 138, 35], [177, 139, 32], [182, 141, 30], [186, 142, 27], [191, 144, 24], [186, 145, 27], [181, 147, 30], [176, 148, 33], [171, 149, 36], [166, 150, 39], [161, 152, 42], [156, 153, 45], [151, 154, 48], [146, 155, 51], [141, 157, 54], [136, 158, 57], [131, 159, 60], [126, 161, 63], [121, 162, 66], [117, 163, 68], [112, 164, 71], [107, 166, 74], [102, 167, 77], [97, 168, 80], [92, 170, 83], [87, 171, 86], [82, 172, 89], [77, 173, 92], [72, 175, 95], [67, 176, 98], [62, 177, 101], [57, 178, 104], [52, 180, 107], [47, 181, 110], [49, 182, 110], [51, 183, 110], [53, 183, 109], [55, 184, 109], [56, 185, 109], [58, 186, 109], [60, 186, 108], [62, 187, 108], [64, 188, 108], [66, 189, 108], [68, 189, 107], [70, 190, 107], [72, 191, 107], [74, 192, 107], [75, 192, 106], [77, 193, 106], [79, 194, 106], [81, 195, 106], [83, 195, 105], [85, 196, 105], [87, 197, 105], [89, 198, 105], [91, 198, 104], [92, 199, 104], [94, 200, 104], [96, 201, 104], [98, 201, 103], [100, 202, 103], [104, 200, 104], [109, 197, 105], [113, 195, 105], [118, 192, 106], [122, 190, 107], [127, 187, 108], [131, 185, 109], [136, 182, 110], [140, 180, 110], [145, 177, 111], [149, 175, 112], [154, 172, 113], [158, 170, 114], [163, 167, 115], [167, 165, 115], [172, 162, 116], [176, 160, 117], [181, 157, 118], [185, 155, 119], [190, 152, 120], [194, 150, 120], [199, 147, 121], [203, 145, 122], [208, 142, 123], [212, 140, 124], [217, 137, 125], [221, 135, 125], [226, 132, 126], [230, 130, 127]];
const grayPalette:number[][] = [[16, 128, 128], [17, 128, 128], [18, 128, 128], [19, 128, 128], [20, 128, 128], [21, 128, 128], [22, 128, 128], [23, 128, 128], [24, 128, 128], [25, 128, 128], [26, 128, 128], [27, 128, 128], [28, 128, 128], [29, 128, 128], [30, 128, 128], [31, 128, 128], [32, 128, 128], [33, 128, 128], [34, 128, 128], [35, 128, 128], [36, 128, 128], [37, 128, 128], [38, 128, 128], [39, 128, 128], [40, 128, 128], [41, 128, 128], [42, 128, 128], [43, 128, 128], [44, 128, 128], [44, 128, 128], [45, 128, 128], [46, 128, 128], [47, 128, 128], [48, 128, 128], [49, 128, 128], [50, 128, 128], [51, 128, 128], [52, 128, 128], [53, 128, 128], [54, 128, 128], [55, 128, 128], [56, 128, 128], [57, 128, 128], [58, 128, 128], [59, 128, 128], [60, 128, 128], [61, 128, 128], [62, 128, 128], [63, 128, 128], [64, 128, 128], [65, 128, 128], [66, 128, 128], [67, 128, 128], [68, 128, 128], [69, 128, 128], [70, 128, 128], [71, 128, 128], [72, 128, 128], [73, 128, 128], [74, 128, 128], [75, 128, 128], [76, 128, 128], [77, 128, 128], [78, 128, 128], [79, 128, 128], [80, 128, 128], [81, 128, 128], [82, 128, 128], [83, 128, 128], [84, 128, 128], [85, 128, 128], [86, 128, 128], [87, 128, 128], [88, 128, 128], [89, 128, 128], [90, 128, 128], [91, 128, 128], [92, 128, 128], [93, 128, 128], [94, 128, 128], [95, 128, 128], [96, 128, 128], [97, 128, 128], [98, 128, 128], [99, 128, 128], [99, 128, 128], [100, 128, 128], [101, 128, 128], [102, 128, 128], [103, 128, 128], [104, 128, 128], [105, 128, 128], [106, 128, 128], [107, 128, 128], [108, 128, 128], [109, 128, 128], [110, 128, 128], [111, 128, 128], [112, 128, 128], [113, 128, 128], [114, 128, 128], [115, 128, 128], [116, 128, 128], [117, 128, 128], [118, 128, 128], [119, 128, 128], [120, 128, 128], [121, 128, 128], [122, 128, 128], [123, 128, 128], [124, 128, 128], [125, 128, 128], [126, 128, 128], [127, 128, 128], [128, 128, 128], [129, 128, 128], [130, 128, 128], [131, 128, 128], [132, 128, 128], [133, 128, 128], [134, 128, 128], [135, 128, 128], [136, 128, 128], [137, 128, 128], [138, 128, 128], [139, 128, 128], [140, 128, 128], [141, 128, 128], [142, 128, 128], [143, 128, 128], [144, 128, 128], [145, 128, 128], [146, 128, 128], [147, 128, 128], [148, 128, 128], [149, 128, 128], [150, 128, 128], [151, 128, 128], [152, 128, 128], [153, 128, 128], [154, 128, 128], [154, 128, 128], [155, 128, 128], [156, 128, 128], [157, 128, 128], [158, 128, 128], [159, 128, 128], [160, 128, 128], [161, 128, 128], [162, 128, 128], [163, 128, 128], [164, 128, 128], [165, 128, 128], [166, 128, 128], [167, 128, 128], [168, 128, 128], [169, 128, 128], [170, 128, 128], [171, 128, 128], [172, 128, 128], [173, 128, 128], [174, 128, 128], [175, 128, 128], [176, 128, 128], [177, 128, 128], [178, 128, 128], [179, 128, 128], [180, 128, 128], [181, 128, 128], [182, 128, 128], [183, 128, 128], [184, 128, 128], [185, 128, 128], [186, 128, 128], [187, 128, 128], [188, 128, 128], [189, 128, 128], [190, 128, 128], [191, 128, 128], [192, 128, 128], [193, 128, 128], [194, 128, 128], [195, 128, 128], [196, 128, 128], [197, 128, 128], [198, 128, 128], [199, 128, 128], [200, 128, 128], [201, 128, 128], [202, 128, 128], [203, 128, 128], [204, 128, 128], [205, 128, 128], [206, 128, 128], [207, 128, 128], [208, 128, 128], [209, 128, 128], [209, 128, 128], [210, 128, 128], [211, 128, 128], [212, 128, 128], [213, 128, 128], [214, 128, 128], [215, 128, 128], [216, 128, 128], [217, 128, 128], [218, 128, 128], [219, 128, 128], [220, 128, 128], [221, 128, 128], [222, 128, 128], [223, 128, 128], [224, 128, 128], [225, 128, 128], [226, 128, 128], [227, 128, 128], [228, 128, 128], [229, 128, 128], [230, 128, 128], [231, 128, 128], [232, 128, 128], [233, 128, 128], [234, 128, 128], [235, 128, 128]];
const hottestPalette:number[][] = [[16, 128, 128], [17, 128, 128], [18, 128, 128], [19, 128, 128], [20, 128, 128], [21, 128, 128], [22, 128, 128], [23, 128, 128], [24, 128, 128], [25, 128, 128], [26, 128, 128], [27, 128, 128], [28, 128, 128], [29, 128, 128], [30, 128, 128], [31, 128, 128], [32, 128, 128], [33, 128, 128], [34, 128, 128], [35, 128, 128], [36, 128, 128], [37, 128, 128], [38, 128, 128], [39, 128, 128], [40, 128, 128], [41, 128, 128], [42, 128, 128], [43, 128, 128], [44, 128, 128], [44, 128, 128], [45, 128, 128], [46, 128, 128], [47, 128, 128], [48, 128, 128], [49, 128, 128], [50, 128, 128], [51, 128, 128], [52, 128, 128], [53, 128, 128], [54, 128, 128], [55, 128, 128], [56, 128, 128], [57, 128, 128], [58, 128, 128], [59, 128, 128], [60, 128, 128], [61, 128, 128], [62, 128, 128], [63, 128, 128], [64, 128, 128], [65, 128, 128], [66, 128, 128], [67, 128, 128], [68, 128, 128], [69, 128, 128], [70, 128, 128], [71, 128, 128], [72, 128, 128], [73, 128, 128], [74, 128, 128], [75, 128, 128], [76, 128, 128], [77, 128, 128], [78, 128, 128], [79, 128, 128], [80, 128, 128], [81, 128, 128], [82, 128, 128], [83, 128, 128], [84, 128, 128], [85, 128, 128], [86, 128, 128], [87, 128, 128], [88, 128, 128], [89, 128, 128], [90, 128, 128], [91, 128, 128], [92, 128, 128], [93, 128, 128], [94, 128, 128], [95, 128, 128], [96, 128, 128], [97, 128, 128], [98, 128, 128], [99, 128, 128], [99, 128, 128], [100, 128, 128], [101, 128, 128], [102, 128, 128], [103, 128, 128], [104, 128, 128], [105, 128, 128], [106, 128, 128], [107, 128, 128], [108, 128, 128], [109, 128, 128], [110, 128, 128], [111, 128, 128], [112, 128, 128], [113, 128, 128], [114, 128, 128], [115, 128, 128], [116, 128, 128], [117, 128, 128], [118, 128, 128], [119, 128, 128], [120, 128, 128], [121, 128, 128], [122, 128, 128], [123, 128, 128], [124, 128, 128], [125, 128, 128], [126, 128, 128], [127, 128, 128], [128, 128, 128], [129, 128, 128], [130, 128, 128], [131, 128, 128], [132, 128, 128], [133, 128, 128], [134, 128, 128], [135, 128, 128], [136, 128, 128], [137, 128, 128], [138, 128, 128], [139, 128, 128], [140, 128, 128], [141, 128, 128], [142, 128, 128], [143, 128, 128], [144, 128, 128], [145, 128, 128], [146, 128, 128], [147, 128, 128], [148, 128, 128], [149, 128, 128], [150, 128, 128], [151, 128, 128], [152, 128, 128], [153, 128, 128], [154, 128, 128], [154, 128, 128], [155, 128, 128], [156, 128, 128], [157, 128, 128], [158, 128, 128], [159, 128, 128], [160, 128, 128], [161, 128, 128], [162, 128, 128], [163, 128, 128], [164, 128, 128], [165, 128, 128], [166, 128, 128], [167, 128, 128], [168, 128, 128], [169, 128, 128], [170, 128, 128], [171, 128, 128], [172, 128, 128], [173, 128, 128], [174, 128, 128], [175, 128, 128], [176, 128, 128], [177, 128, 128], [178, 128, 128], [179, 128, 128], [180, 128, 128], [181, 128, 128], [182, 128, 128], [183, 128, 128], [184, 128, 128], [185, 128, 128], [186, 128, 128], [187, 128, 128], [188, 128, 128], [189, 128, 128], [190, 128, 128], [191, 128, 128], [192, 128, 128], [193, 128, 128], [194, 128, 128], [195, 128, 128], [196, 128, 128], [197, 128, 128], [198, 128, 128], [199, 128, 128], [200, 128, 128], [201, 128, 128], [202, 128, 128], [203, 128, 128], [204, 128, 128], [205, 128, 128], [206, 128, 128], [207, 128, 128], [208, 128, 128], [209, 128, 128], [209, 128, 128], [210, 128, 128], [211, 128, 128], [212, 128, 128], [213, 128, 128], [214, 128, 128], [215, 128, 128], [216, 128, 128], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98], [67, 216, 98]];
const ironPalette:number[][] = [[16, 101, 140], [17, 103, 142], [18, 105, 145], [19, 106, 147], [20, 108, 149], [21, 110, 152], [22, 112, 154], [23, 114, 156], [24, 116, 158], [25, 118, 160], [26, 120, 162], [27, 121, 164], [28, 123, 165], [29, 125, 167], [30, 127, 169], [31, 128, 170], [32, 130, 172], [33, 132, 173], [34, 133, 174], [35, 135, 175], [36, 136, 177], [37, 138, 178], [38, 140, 179], [39, 141, 180], [40, 143, 181], [41, 144, 181], [42, 145, 182], [43, 147, 183], [44, 148, 183], [44, 150, 184], [45, 151, 185], [46, 152, 185], [47, 154, 185], [48, 155, 186], [49, 156, 186], [50, 157, 186], [51, 159, 186], [52, 160, 186], [53, 161, 186], [54, 162, 186], [55, 163, 186], [56, 165, 186], [57, 166, 186], [58, 167, 186], [59, 168, 186], [60, 169, 185], [61, 170, 185], [62, 171, 185], [63, 172, 184], [64, 173, 184], [65, 174, 183], [66, 175, 182], [67, 176, 182], [68, 177, 181], [69, 177, 180], [70, 178, 180], [71, 179, 179], [72, 180, 178], [73, 181, 177], [74, 182, 176], [75, 182, 175], [76, 183, 174], [77, 184, 173], [78, 184, 172], [79, 185, 171], [80, 186, 170], [81, 186, 169], [82, 187, 168], [83, 188, 166], [84, 188, 165], [85, 189, 164], [86, 189, 163], [87, 190, 161], [88, 190, 160], [89, 191, 159], [90, 191, 157], [91, 192, 156], [92, 192, 154], [93, 193, 153], [94, 193, 151], [95, 194, 150], [96, 194, 148], [97, 194, 147], [98, 195, 145], [99, 195, 144], [99, 195, 142], [100, 196, 140], [101, 196, 139], [102, 196, 137], [103, 197, 135], [104, 197, 134], [105, 197, 132], [106, 197, 130], [107, 197, 129], [108, 198, 127], [109, 198, 125], [110, 198, 123], [111, 198, 122], [112, 198, 120], [113, 198, 118], [114, 198, 117], [115, 198, 115], [116, 198, 113], [117, 198, 111], [118, 198, 109], [119, 198, 108], [120, 198, 106], [121, 198, 104], [122, 198, 102], [123, 198, 101], [124, 198, 99], [125, 198, 97], [126, 198, 96], [127, 198, 94], [128, 198, 92], [129, 198, 90], [130, 198, 89], [131, 197, 87], [132, 197, 85], [133, 197, 84], [134, 197, 82], [135, 197, 80], [136, 196, 79], [137, 196, 77], [138, 196, 75], [139, 196, 74], [140, 195, 72], [141, 195, 71], [142, 195, 69], [143, 194, 68], [144, 194, 66], [145, 194, 65], [146, 193, 63], [147, 193, 62], [148, 193, 60], [149, 192, 59], [150, 192, 58], [151, 191, 56], [152, 191, 55], [153, 191, 54], [154, 190, 53], [154, 190, 51], [155, 189, 50], [156, 189, 49], [157, 188, 48], [158, 188, 47], [159, 187, 46], [160, 187, 45], [161, 186, 44], [162, 186, 43], [163, 185, 42], [164, 184, 41], [165, 184, 40], [166, 183, 40], [167, 183, 39], [168, 182, 38], [169, 181, 37], [170, 181, 37], [171, 180, 36], [172, 179, 36], [173, 179, 35], [174, 178, 35], [175, 177, 34], [176, 177, 34], [177, 176, 34], [178, 175, 33], [179, 175, 33], [180, 174, 33], [181, 173, 33], [182, 172, 33], [183, 172, 33], [184, 171, 33], [185, 170, 33], [186, 169, 33], [187, 168, 33], [188, 168, 34], [189, 167, 34], [190, 166, 34], [191, 165, 35], [192, 164, 35], [193, 163, 36], [194, 163, 37], [195, 162, 37], [196, 161, 38], [197, 160, 39], [198, 159, 40], [199, 158, 41], [200, 157, 42], [201, 156, 43], [202, 155, 44], [203, 155, 45], [204, 154, 46], [205, 153, 48], [206, 152, 49], [207, 151, 51], [208, 150, 52], [209, 149, 54], [209, 148, 56], [210, 147, 58], [211, 146, 60], [212, 145, 62], [213, 144, 64], [214, 143, 66], [215, 142, 68], [216, 141, 70], [217, 140, 73], [218, 139, 75], [219, 138, 78], [220, 137, 80], [221, 136, 83], [222, 135, 86], [223, 134, 89], [224, 133, 91], [225, 131, 95], [226, 130, 98], [227, 129, 101], [228, 128, 104], [229, 127, 108], [230, 126, 111], [231, 125, 115], [232, 124, 118], [233, 123, 122], [234, 122, 126], [235, 121, 130]];
const lavaPalette:number[][] = [[16, 128, 128], [19, 127, 130], [22, 126, 133], [25, 125, 135], [28, 124, 137], [31, 122, 139], [33, 122, 142], [37, 120, 144], [39, 119, 146], [43, 118, 148], [45, 117, 151], [48, 116, 154], [51, 115, 156], [54, 114, 158], [57, 112, 160], [60, 112, 163], [63, 110, 165], [66, 109, 167], [69, 108, 169], [72, 107, 172], [75, 106, 174], [75, 104, 174], [75, 104, 174], [76, 102, 174], [76, 100, 173], [77, 99, 173], [77, 98, 173], [78, 96, 173], [78, 95, 173], [78, 94, 173], [79, 93, 172], [80, 91, 172], [80, 90, 172], [81, 89, 172], [81, 87, 172], [82, 85, 172], [82, 84, 172], [82, 83, 171], [83, 81, 172], [83, 80, 171], [84, 79, 171], [84, 78, 170], [84, 78, 170], [85, 78, 169], [85, 77, 169], [86, 77, 168], [87, 76, 167], [87, 76, 166], [88, 76, 166], [88, 75, 165], [88, 75, 164], [89, 75, 164], [89, 75, 163], [90, 74, 163], [90, 74, 162], [91, 73, 161], [91, 73, 160], [92, 73, 160], [92, 72, 159], [93, 72, 158], [93, 72, 158], [94, 71, 157], [94, 71, 156], [95, 71, 156], [94, 71, 156], [95, 71, 155], [95, 70, 155], [96, 70, 154], [96, 70, 153], [97, 69, 152], [97, 69, 152], [97, 69, 152], [97, 69, 151], [98, 68, 150], [98, 68, 149], [99, 68, 149], [99, 67, 148], [99, 67, 148], [99, 67, 148], [100, 67, 147], [100, 67, 146], [99, 71, 146], [99, 75, 147], [98, 80, 147], [97, 84, 147], [96, 88, 147], [96, 93, 147], [94, 97, 147], [94, 101, 147], [93, 106, 148], [93, 110, 147], [92, 115, 147], [91, 119, 148], [90, 124, 148], [89, 128, 148], [88, 132, 148], [87, 137, 148], [87, 141, 148], [86, 145, 148], [85, 150, 149], [84, 154, 149], [84, 156, 148], [84, 157, 146], [84, 159, 145], [84, 161, 144], [84, 163, 142], [84, 164, 142], [83, 166, 140], [83, 167, 139], [83, 169, 138], [84, 171, 136], [84, 172, 135], [84, 174, 134], [83, 175, 133], [83, 177, 132], [83, 179, 131], [83, 180, 129], [83, 182, 129], [83, 184, 127], [83, 185, 126], [83, 187, 125], [83, 188, 124], [83, 189, 123], [83, 190, 122], [83, 191, 122], [83, 192, 121], [83, 193, 119], [83, 194, 119], [83, 195, 118], [83, 196, 117], [84, 197, 116], [84, 198, 115], [84, 199, 115], [84, 200, 114], [84, 201, 113], [84, 202, 112], [84, 203, 111], [84, 204, 111], [84, 205, 110], [84, 206, 109], [84, 207, 108], [86, 207, 107], [87, 208, 106], [89, 208, 105], [90, 209, 104], [91, 210, 103], [93, 210, 103], [94, 211, 102], [96, 211, 101], [97, 211, 100], [98, 212, 99], [100, 213, 98], [101, 213, 97], [103, 213, 96], [104, 214, 96], [106, 215, 95], [107, 215, 94], [108, 215, 93], [110, 216, 92], [111, 217, 91], [113, 217, 90], [114, 217, 89], [114, 216, 87], [115, 215, 86], [116, 215, 85], [116, 214, 83], [117, 214, 82], [118, 213, 81], [119, 213, 80], [120, 212, 78], [121, 211, 77], [121, 211, 75], [123, 210, 73], [123, 209, 72], [124, 209, 70], [125, 208, 69], [125, 208, 67], [126, 207, 66], [127, 207, 65], [128, 206, 63], [130, 205, 62], [131, 204, 61], [133, 202, 60], [135, 201, 59], [137, 199, 58], [139, 198, 57], [141, 197, 56], [143, 195, 55], [145, 194, 54], [147, 192, 53], [149, 191, 52], [150, 190, 51], [152, 188, 50], [154, 187, 48], [156, 185, 47], [158, 184, 46], [160, 183, 45], [162, 181, 44], [163, 180, 43], [165, 179, 42], [167, 178, 41], [168, 177, 40], [169, 176, 40], [170, 175, 39], [172, 174, 38], [173, 173, 37], [174, 172, 37], [176, 171, 36], [177, 170, 35], [178, 169, 34], [180, 168, 34], [181, 167, 33], [182, 166, 32], [183, 166, 31], [185, 165, 31], [186, 163, 30], [187, 163, 29], [189, 162, 28], [190, 161, 28], [191, 160, 27], [194, 158, 32], [196, 156, 37], [198, 155, 42], [200, 154, 47], [202, 152, 52], [204, 150, 57], [207, 149, 62], [209, 147, 67], [211, 145, 72], [214, 144, 77], [215, 142, 82], [217, 141, 88], [220, 139, 93], [222, 138, 97], [224, 136, 103], [227, 134, 108], [228, 133, 113], [231, 131, 118], [233, 130, 123], [235, 128, 128]];
const rainbowPalette:number[][] = [[25, 122, 159], [25, 122, 159], [25, 122, 160], [25, 122, 160], [25, 122, 160], [25, 122, 160], [25, 121, 161], [25, 121, 161], [26, 121, 163], [26, 121, 163], [28, 119, 165], [28, 119, 165], [32, 116, 165], [32, 116, 165], [39, 111, 166], [43, 108, 167], [43, 108, 167], [47, 106, 168], [47, 106, 168], [49, 104, 170], [49, 104, 170], [54, 101, 172], [54, 101, 172], [55, 100, 173], [55, 100, 173], [56, 99, 174], [56, 99, 174], [58, 97, 175], [62, 95, 178], [62, 95, 178], [64, 93, 179], [64, 93, 179], [66, 91, 180], [66, 91, 180], [68, 90, 182], [68, 90, 182], [71, 88, 185], [71, 88, 185], [73, 86, 186], [73, 86, 186], [75, 85, 188], [75, 85, 188], [79, 82, 190], [81, 80, 191], [81, 80, 191], [84, 79, 192], [84, 79, 192], [84, 78, 192], [84, 78, 192], [86, 77, 192], [86, 77, 192], [89, 75, 194], [89, 75, 194], [90, 74, 194], [90, 74, 194], [93, 72, 194], [95, 71, 193], [95, 71, 193], [97, 69, 191], [97, 69, 191], [98, 69, 189], [98, 69, 189], [100, 68, 186], [100, 68, 186], [103, 67, 183], [103, 67, 183], [104, 66, 177], [104, 66, 177], [105, 67, 172], [105, 67, 172], [106, 67, 164], [107, 68, 157], [107, 68, 157], [107, 68, 154], [107, 68, 154], [108, 69, 149], [108, 69, 149], [109, 71, 139], [109, 71, 139], [113, 75, 126], [113, 75, 126], [116, 80, 117], [116, 80, 117], [120, 84, 107], [125, 90, 95], [125, 90, 95], [129, 94, 87], [129, 94, 87], [133, 98, 80], [133, 98, 80], [136, 101, 74], [136, 101, 74], [142, 107, 66], [142, 107, 66], [146, 111, 62], [146, 111, 62], [150, 114, 57], [150, 114, 57], [153, 117, 53], [156, 120, 50], [156, 120, 50], [160, 123, 47], [160, 123, 47], [163, 127, 44], [163, 127, 44], [166, 130, 42], [166, 130, 42], [171, 134, 39], [171, 134, 39], [173, 136, 37], [173, 136, 37], [175, 138, 37], [179, 142, 35], [179, 142, 35], [180, 145, 35], [180, 145, 35], [181, 147, 35], [181, 147, 35], [181, 149, 35], [181, 149, 35], [183, 152, 35], [183, 152, 35], [183, 152, 35], [183, 152, 35], [183, 153, 35], [183, 153, 35], [183, 155, 36], [182, 158, 37], [182, 158, 37], [181, 160, 37], [181, 160, 37], [180, 162, 39], [180, 162, 39], [180, 163, 39], [180, 163, 39], [178, 166, 42], [178, 166, 42], [176, 168, 43], [176, 168, 43], [175, 170, 45], [171, 174, 48], [171, 174, 48], [168, 176, 50], [168, 176, 50], [166, 178, 52], [166, 178, 52], [164, 180, 54], [164, 180, 54], [162, 181, 56], [162, 181, 56], [156, 185, 61], [156, 185, 61], [153, 188, 64], [153, 188, 64], [149, 191, 67], [141, 197, 74], [141, 197, 74], [135, 201, 79], [135, 201, 79], [130, 205, 83], [130, 205, 83], [124, 208, 88], [124, 208, 88], [117, 213, 94], [117, 213, 94], [113, 216, 98], [113, 216, 98], [109, 218, 102], [103, 222, 107], [103, 222, 107], [102, 223, 109], [102, 223, 109], [101, 223, 110], [101, 223, 110], [100, 223, 112], [100, 223, 112], [100, 223, 113], [100, 223, 113], [99, 223, 116], [99, 223, 116], [100, 222, 118], [100, 222, 118], [101, 221, 119], [107, 216, 118], [107, 216, 118], [111, 213, 118], [111, 213, 118], [117, 210, 117], [117, 210, 117], [122, 206, 116], [122, 206, 116], [131, 200, 113], [131, 200, 113], [138, 196, 111], [138, 196, 111], [140, 194, 111], [143, 193, 111], [143, 193, 111], [151, 187, 110], [151, 187, 110], [157, 184, 109], [157, 184, 109], [162, 181, 109], [162, 181, 109], [167, 177, 108], [167, 177, 108], [175, 172, 107], [175, 172, 107], [181, 168, 107], [181, 168, 107], [186, 163, 107], [194, 158, 107], [194, 158, 107], [199, 155, 108], [199, 155, 108], [203, 151, 109], [203, 151, 109], [209, 147, 109], [209, 147, 109], [212, 145, 112], [212, 145, 112], [215, 143, 114], [215, 143, 114], [218, 141, 113]];
const wheelPalette:number[][] = [[16, 129, 129], [21, 125, 126], [26, 122, 123], [31, 118, 120], [36, 114, 117], [41, 110, 114], [45, 107, 112], [50, 103, 109], [55, 100, 106], [60, 96, 103], [65, 92, 100], [70, 89, 97], [75, 85, 94], [80, 82, 92], [85, 78, 89], [90, 74, 86], [95, 71, 83], [100, 67, 80], [105, 64, 77], [110, 60, 74], [115, 56, 71], [119, 53, 69], [124, 49, 66], [129, 46, 63], [135, 42, 60], [140, 38, 57], [145, 35, 54], [143, 42, 60], [141, 48, 65], [140, 55, 70], [139, 62, 76], [137, 68, 81], [136, 75, 86], [135, 81, 91], [133, 88, 96], [132, 95, 102], [131, 102, 108], [129, 109, 113], [128, 115, 118], [126, 122, 123], [125, 129, 129], [124, 135, 134], [122, 142, 139], [121, 148, 144], [120, 155, 149], [118, 162, 155], [117, 169, 161], [116, 176, 166], [114, 182, 171], [113, 189, 176], [112, 195, 181], [110, 202, 187], [109, 209, 192], [107, 215, 197], [107, 222, 203], [107, 218, 202], [109, 214, 201], [110, 209, 201], [111, 205, 200], [113, 200, 199], [114, 196, 198], [115, 192, 198], [117, 187, 197], [118, 183, 196], [120, 179, 195], [121, 174, 194], [122, 170, 194], [124, 166, 193], [125, 161, 192], [127, 157, 191], [128, 152, 191], [129, 148, 190], [131, 144, 189], [131, 140, 188], [133, 135, 187], [134, 131, 187], [135, 127, 186], [137, 122, 185], [138, 118, 184], [140, 113, 183], [141, 109, 183], [142, 105, 182], [144, 100, 181], [145, 96, 181], [147, 92, 180], [148, 88, 179], [149, 83, 178], [151, 79, 177], [152, 74, 177], [153, 70, 176], [154, 66, 175], [155, 61, 174], [157, 57, 173], [158, 53, 173], [160, 48, 172], [161, 44, 171], [162, 39, 171], [164, 35, 170], [165, 31, 169], [167, 26, 168], [168, 22, 167], [170, 18, 166], [167, 23, 165], [166, 27, 163], [164, 31, 162], [162, 36, 160], [160, 40, 159], [159, 45, 157], [157, 49, 156], [155, 53, 154], [153, 58, 153], [152, 62, 151], [150, 67, 150], [148, 71, 148], [146, 76, 147], [144, 80, 146], [143, 84, 144], [141, 89, 143], [139, 94, 141], [138, 98, 139], [136, 103, 138], [134, 107, 136], [132, 111, 135], [131, 116, 133], [129, 120, 132], [127, 124, 130], [125, 129, 129], [123, 134, 128], [122, 138, 126], [120, 142, 125], [118, 147, 123], [116, 151, 122], [115, 156, 120], [113, 160, 119], [111, 164, 117], [110, 169, 115], [108, 174, 114], [106, 178, 112], [104, 182, 111], [102, 187, 110], [100, 192, 108], [99, 196, 107], [97, 200, 105], [95, 205, 104], [94, 209, 102], [92, 214, 101], [90, 218, 99], [88, 222, 98], [87, 227, 96], [85, 231, 95], [83, 236, 93], [82, 240, 92], [81, 237, 95], [80, 235, 98], [79, 232, 101], [78, 229, 104], [77, 226, 107], [76, 224, 111], [76, 221, 113], [75, 218, 117], [74, 215, 120], [73, 212, 123], [72, 210, 126], [71, 207, 129], [70, 204, 132], [70, 202, 136], [69, 199, 139], [68, 196, 142], [67, 193, 145], [66, 190, 148], [65, 187, 152], [64, 185, 155], [64, 182, 158], [62, 179, 161], [62, 177, 164], [61, 174, 168], [60, 171, 171], [59, 168, 174], [58, 165, 177], [57, 163, 180], [56, 160, 184], [56, 157, 186], [55, 154, 190], [54, 152, 193], [53, 149, 196], [52, 146, 199], [51, 143, 202], [50, 140, 205], [50, 138, 209], [49, 135, 212], [48, 132, 215], [47, 129, 218], [46, 127, 221], [45, 124, 225], [44, 121, 228], [43, 119, 231], [43, 115, 234], [42, 113, 237], [41, 110, 241], [44, 111, 237], [46, 112, 233], [50, 112, 229], [52, 113, 225], [56, 114, 221], [58, 114, 217], [61, 115, 213], [64, 115, 209], [67, 116, 205], [70, 117, 201], [73, 118, 197], [76, 118, 194], [79, 119, 190], [82, 119, 186], [85, 120, 182], [88, 121, 178], [91, 122, 174], [93, 122, 170], [97, 123, 166], [99, 123, 162], [103, 124, 158], [105, 125, 154], [109, 125, 150], [111, 126, 147], [114, 127, 143], [117, 127, 139], [120, 128, 135], [123, 129, 131], [126, 129, 127], [129, 130, 123], [132, 130, 119], [135, 131, 115], [138, 132, 111], [141, 133, 108], [144, 133, 104], [147, 134, 100], [150, 134, 96], [153, 135, 92], [156, 136, 88], [158, 136, 84], [161, 137, 80], [164, 137, 76], [167, 138, 72], [170, 139, 68], [173, 140, 65], [176, 140, 61], [179, 141, 57], [182, 141, 53], [185, 142, 49], [188, 143, 45], [191, 144, 41], [194, 144, 37], [197, 145, 33], [200, 145, 29], [203, 146, 25], [206, 147, 21], [209, 147, 18]];

const numToPal:object = {
    0:arcticPalette,
    1:coldestPalette,
    2:contrastPalette,
    3:grayPalette,
    4:hottestPalette,
    5:ironPalette,
    6:lavaPalette,
    7:rainbowPalette,
    8:wheelPalette};

var nextPalNum:number = 1;

window.onload = () =>
{
    img = document.getElementById("ir-img");
    canvas = document.getElementById('can');
    canvas.width = img.width;
    canvas.height = img.height;
    canvas.addEventListener('click', getTemperature, false);
    ctx = canvas.getContext('2d');
    ctx.drawImage(img, 0, 0, img.width, img.height);

    img2 = document.getElementById("ir-img2");
    let canvas2: any = document.getElementById('can2');
    canvas2.width = img2.width;
    canvas2.height = img2.height;
    ctx2 = canvas2.getContext('2d');
    ctx2.drawImage(img2, 0, 0, img2.width, img2.height);
};


/**
 * converts from color space YCbCr to RGB
 * @param c
 * @constructor
 */
function YCbCrTorgb(c:number[])
{
    let r:number = Math.floor(c[0] + 1.40200 * (c[1] - 128));
    let g:number = Math.floor(c[0] - 0.34414 * (c[2] - 128) - 0.71414 * (c[1] - 128));
    let b:number = Math.floor(c[0] + 1.77200 * (c[2] - 128));

    r = Math.max(0, Math.min(255, r));
    g = Math.max(0, Math.min(255, g));
    b = Math.max(0, Math.min(255, b));

    return [r, g, b];
}


/**
 * changes the colors of an image from its old palette to the new one
 *
 */
function changePalette()
{
    nextPalNum %= 9;
    let currPalNum:string = identifyPalette(img2, ctx2);
    document.getElementById("text").innerText = "changed palette from " + currPalNum + " to " + nextPalNum + "...";
    console.log("changing palette from " + currPalNum + " to " + nextPalNum + "...");

    let oldPal:number[][] = numToPal[currPalNum].slice();
    let newPal:number[][] = numToPal[nextPalNum].slice();
    nextPalNum++;
    for(let i:number = 0; i < oldPal.length; i++)
    {
        oldPal[i] = YCbCrTorgb(oldPal[i]);
    }
    for(let i:number = 0; i < newPal.length; i++)
    {
        newPal[i] = YCbCrTorgb(newPal[i]);
    }

    // if the sizes don't match up stretch one of them
    if(newPal.length != oldPal.length)
    {
        if(newPal.length > oldPal.length) {oldPal = stretchArray(oldPal, newPal.length);}
        else {newPal = stretchArray(newPal, oldPal.length);}
    }

    let oldToNew = createObjectFromArrays(oldPal, newPal);

    // change the pixels
    for(let x:number = 0; x < img.width; x++)
    {
        for(let y:number = 0; y < img.height; y++)
        {
            let imgData:string = ctx2.getImageData(x, y, 1, 1).data.slice(0, 3).toString();
            let newColor:ImageData = ctx.createImageData(1, 1);
            for(let i:number = 0; i < oldToNew[imgData].length; i++)
            {
                newColor.data[i] = oldToNew[imgData][i];
            }
            newColor.data[3] = 255;
            ctx.putImageData(newColor, x, y);
        }
    }

    console.log("DONE!")
}


/**
 * matches each value from each list in an object
 * so [1, 2, 3] and [4, 5, 6] --> {1:4, 2:5, 3:6}
 * @param arr0 - keys
 * @param arr1 - values
 */
function createObjectFromArrays(arr0, arr1) {
    let combo = {};
    for (let i = 0; i < arr0.length; i++) {
        combo[arr0[i]] = arr1[i];
    }
    return combo;
}

/**
 * fills an array with the specified value
 * @param arr
 * @param val
 */
function fill(arr:any[], val:any)
{
    for(let i:number = 0; i < arr.length; i++)
    {
        arr[i] = val;
    }
    return arr;
}


/**
 * stretches a list to be a certain length and tries to fill it in as evenly as possible
 * so with orig as [0, 1, 2] and leng as 5 it would output [0, 0, 1, 1, 2]
 * @param origArr - list to be stretched
 * @param newLength - length of final stretched list
 * @returns - list with length leng filled evenly with values from orig
 */
function stretchArray(origArr:any[], newLength:number)
{
    let newArr:any[] = fill(new Array(newLength), null);
    let numEach:number = Math.round(newArr.length / origArr.length);
    let prev:number = 0;
    let i:number = 0;
    while(numEach * (i + 1) <= newLength && i < origArr.length)
    {
        newArr.splice(prev, numEach, ...fill(new Array(numEach), origArr[i]));
        prev = numEach * (i + 1);
        i++;
    }

    let numNull:number = 0;
    for(let i:number = 0; i < newArr.length; i++)
    {
        if(newArr[i] == null)
        {
            numNull++;
        }
    }
    if(numNull > 0)
    {
        if (i >= origArr.length)
        {
            i = origArr.length - 1;
        }
        newArr.splice(newArr.length - numNull, numNull, ...stretchArray([origArr[i]], numNull));
    }
    return newArr;
}


/**
 * gives the palette number of the palette that the image follows
 * @param image
 */
function identifyPalette(image:any, cntxt:any)
{
    // convert palette to rgb. originally in YCbCr
    let rgbPalettes:object = {};
    let numToPalKeys:string[] = Object.keys(numToPal).slice();
    for(let k:number = 0; k < numToPalKeys.length; k++)
    {
        let pal:number[][] = numToPal[numToPalKeys[k]].slice();
        for(let i:number = 0; i < pal.length; i++)
        {
            pal[i] = YCbCrTorgb(pal[i]);
        }
        rgbPalettes[numToPalKeys[k]] = pal;
    }

    // get rid of all palettes that do not have (r, g, b) values that match with the image
    for(let x:number = 0; x < image.width; x++)
    {
        for(let y:number = 0; y < image.height; y++)
        {
            let toPop:string[] = [];

            let rgb:number[] = cntxt.getImageData(x, y, 1, 1 ,).data.slice(0, 3);
            for(let k:number = 0; k < numToPalKeys.length; k++)
            {
                let pal:number[][] = rgbPalettes[numToPalKeys[k]];
                let rgbNotInPal:boolean = getIndexIn2D(pal, rgb) == -1;
                if(rgbNotInPal)
                {
                    toPop.push(numToPalKeys[k]);
                }
            }
            for(let i:number = 0; i < toPop.length; i++)
            {
                numToPalKeys.splice(numToPalKeys.indexOf(toPop[i]), 1);
            }

            let foundMatch:boolean = numToPalKeys.length == 1;
            if(foundMatch)
            {
                return numToPalKeys[0];
            }
        }
    }
    return "-1";
}


/**
 * finds index of 1D array of numbers/strings inside a 2D array
 * @param arr2d
 * @param arr1d
 *
 * @return - the index of 1D array in 2D array or -1 if not found
 */
function getIndexIn2D(arr2d, arr1d)
{
    for(let i:number = 0; i < arr2d.length; i++)
    {
        // console.log(arr2d[i].toString());
        if(arr2d[i].toString() == arr1d)
        {
            return i;
        }
    }
    return -1;
}


/**
 * gets temperature of click location on canvas
 * @param event - click event
 */
function getTemperature(event)
{
    let elemLeft:number = canvas.offsetLeft;
    let elemTop:number = canvas.offsetTop;

    const lowTemps:number[] = [-29.660003662109375,-17.569992065429688,-33.94999694824219,-35.19000244140625,-38.3800048828125,-39.08000183105469,-38.50999450683594,-52.92999267578125,-56.56999206542969,-57.19999694824219,-56.839996337890625,-56.92999267578125,-54.709991455078125,-57.92999267578125,-58.959991455078125,-57.839996337890625,-57.28999328613281,-56.56999206542969,-56.38999938964844,-44.660003662109375,-41.029998779296875,-41.029998779296875,-41.100006103515625,-49.86000061035156,-50.17999267578125,-50.17999267578125,-49.709991455078125,-49.00999450683594,-48.470001220703125,-37.94000244140625,-23.089996337890625,-14.209991455078125,-14.1199951171875,-13.8599853515625,-13.69000244140625,-13.089996337890625,-29.819992065429688,-45.00999450683594,-46.75,-49.709991455078125,-49.470001220703125,-49.399993896484375,-48.86000061035156,-48.399993896484375,-47.1199951171875];
    const highTemps:number[] = [5.1199951171875,5.1199951171875,5.04998779296875,6.1300048828125,7.519989013671875,7.260009765625,6.660003662109375,5.92999267578125,5.589996337890625,5.8599853515625,4.980010986328125,4.850006103515625,1.660003662109375,1.8699951171875,2.010009765625,3.269989013671875,3.410003662109375,3.480010986328125,4.779998779296875,5.92999267578125,5.589996337890625,5.19000244140625,1.79998779296875,1.8699951171875,2.079986572265625,1.730010986328125,1.79998779296875,0.670013427734375,3.480010986328125,3.54998779296875,3.75,4.100006103515625,4.160003662109375,4.910003662109375,5.04998779296875,4.29998779296875,4.44000244140625,2.149993896484375,2.230010986328125,2.709991455078125,3.82000732421875,3.8900146484375,4.850006103515625,4.850006103515625,4.850006103515625];
    const lowestTemp = Math.min(...lowTemps);
    const highestTemp = Math.max(...highTemps);

    let currentPixel:string = ctx2.getImageData(event.pageX - elemLeft, event.pageY - elemTop, 1, 1).data.slice(0, 3).toString();
    console.log(currentPixel);
    let pal:number[][] = rainbowPalette.slice();
    let percentage:number = -1;

    // find color in palette that matches color of click location
    for(let i:number = 0; i < pal.length; i++)
    {
        if(YCbCrTorgb(pal[i]).toString() == currentPixel)
        {
            percentage = i / pal.length;
            break;
        }

    }
    let temp:number = (lowestTemp + ((highestTemp - lowestTemp) * percentage));
    document.getElementById("text").innerText = "Temperature: " + temp;
    console.log("Temperature: " + temp);
}